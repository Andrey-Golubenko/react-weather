{"version":3,"sources":["components/Alert/Alert.module.css","components/Warning/Warning.module.css","components/Success/Success.module.css","app/hooks.ts","config.ts","unils/getWeatherDate.ts","unils/iconsMark.ts","app/weatherSlice.tsx","media/iconDelete.svg","unils/fetchDataLocation.ts","components/Preloader.tsx","components/Alert/Alert.tsx","components/Warning/Warning.tsx","components/Success/Success.tsx","components/CityItem.tsx","components/CityList.tsx","components/SuccessLocation.tsx","components/ErrorLocation.tsx","components/Banner.tsx","components/Search.tsx","components/AutoComplete.tsx","pages/Home.tsx","components/SingleCityItem.tsx","unils/getHourlyTime.ts","unils/fetchChosenCity.ts","pages/SingleCityList.tsx","pages/NotFound.tsx","components/Header.tsx","components/Footer.tsx","App.tsx","app/store.ts","index.tsx"],"names":["module","exports","useAppDispatch","useDispatch","useAppSelector","useSelector","API_KEY","process","API_URL","getWeatherDate","timestamp","tmDate","Date","getDay","getMonth","getDate","iconsMark","iconId","newIconID","String","icon","icons","_g","fetchCities","createAsyncThunk","searchingCity","a","rejectWithValue","fetch","response","ok","status","Error","json","data","temperature","main","temp","temperatureMax","temp_max","temperatureMin","temp_min","date","dt","cityName","name","windSpeed","wind","speed","humidity","toFixed","pressure","weatherDescription","weather","description","toUpperCase","weatherIcon","id","coordLat","coord","lat","coordLon","lon","isCelsius","message","fetchCityUpdate","fetchSingleCity","cityGeoData","allData","hourly","slice","filter","item","index","weatherSlice","createSlice","initialState","cities","currentLocation","error","locationError","hourlyForecast","reducers","setError","state","action","payload","resetError","getCurrentLocation","setLocationError","toFahrenheit","map","toCelsius","deleteCity","extraReducers","builder","addCase","pending","fulfilled","push","rejected","actions","weatherReducer","reducer","fetchDataLocation","locationInfo","city","console","log","Preloader","className","Alert","hasError","dispatch","styles","alertMessage","role","closeWarningMessage","onClick","Warning","warningMessage","Success","successMessage","closeSuccessMessage","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgIconDelete","_ref","svgRef","title","titleId","props","xmlns","x","y","viewBox","fill","style","enableBackground","xmlSpace","ref","d","points","ForwardRef","CityItem","activeDegreeCel","activeDegreeFar","Math","round","event","preventDefault","CityList","listClass","join","to","toLowerCase","SuccessLocation","currentCity","ErrorLocation","Banner","location","getLocation","useEffect","Search","children","onChangeValue","onClearField","onKeyCatcher","onSubmitButton","textValue","required","type","placeholder","onKeyDown","onKeyUp","onChange","value","onBlur","AutoComplete","isCancelled","useRef","useState","setTextValue","setCities","suggestions","setSuggestions","focusSuggestion","setFocusSuggestion","citiesFromStore","loadUsers","encodeURIComponent","suggestionsCollection","suggestionsFilter","cityFilter","current","clearFocusSuggestion","clearSuggestion","suggestionList","suggestObj","includes","matchLevel","cityNameLayout","suggestion","countyName","address","county","handleClearField","setTimeout","searchStringVal","maxSuggest","currentTarget","parseInt","split","textClick","innerText","locationId","Home","statusIs","localStore","JSON","parse","localStorage","getItem","getSavedCities","then","citiesNames","setItem","stringify","clear","SingleCityItem","wind_speed","elemWithMinTemp","time","getHours","getMinutes","getHourlyTime","iconSrc","integerTemp","ceil","boxShadowPlus","boxShadowMinus","bottom","boxShadow","setStyles","src","alt","SingleCityList","useParams","fetchChosenCity","min","NotFound","Header","Footer","getFullYear","href","rel","App","basename","exact","path","component","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,aAAe,4BAA4B,eAAiB,8BAA8B,oBAAsB,qC,mBCAlID,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,oBAAsB,uC,mBCAzFD,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,oBAAsB,uC,61HCG5EC,EAAiB,kBAAMC,eACvBC,EAAkDC,I,QCLlDC,EAAUC,mCAEVC,EAAO,2CCFb,SAASC,EAAgBC,GAE5B,IAAMC,EAAS,IAAIC,KAAiB,IAAZF,GAIxB,MAAM,GAAN,OAHa,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAGjEC,EAAOE,UAAtB,aAFe,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEnFF,EAAOG,YAAlD,YAAiEH,EAAOI,W,YCHrE,SAASC,EAAUC,GACtB,IACMC,EAAYC,OAAOF,GAErBG,EADqBC,EACLH,GAAWE,KAM/B,OAJMH,EAAS,KAAOA,EAAS,KAAUA,EAAS,KAAOA,EAAS,MAC9DG,EAAO,OAASA,GANL,SASCA,ECNpB,ICPIE,EDgBSC,EAAcC,YACvB,4BADuC,uCAEvC,WAAgBC,EAAhB,sBAAAC,EAAA,6DAAwCC,EAAxC,EAAwCA,gBAAxC,kBAE+BC,MAAM,GAAD,OAAIpB,EAAJ,qBAAwBiB,EAAxB,+BAA4DnB,IAFhG,WAEcuB,EAFd,QAGsBC,IAA0B,MAApBD,EAASE,OAHrC,sBAIkB,IAAIC,MAAM,kCAJ5B,UAKuC,MAApBH,EAASE,OAL5B,uBAMkB,IAAIC,MAAM,uBAN5B,yBAQ2BH,EAASI,OARpC,eAQcC,EARd,yBAUe,CACHC,YAAaD,EAAKE,KAAKC,KACvBC,eAAgBJ,EAAKE,KAAKG,SAC1BC,eAAgBN,EAAKE,KAAKK,SAC1BC,KAAMjC,EAAeyB,EAAKS,IAC1BC,SAAUV,EAAKW,KACfC,UAAWZ,EAAKa,KAAKC,MACrBC,SAAUf,EAAKE,KAAKa,SAASC,QAAQ,GACrCC,SAAUjB,EAAKE,KAAKe,SAASD,QAAQ,GACrCE,mBAAqBlB,EAAKmB,QAAS,GAAIC,YAAaC,cACpDC,YAAaxC,EAAUkB,EAAKmB,QAAS,GAAII,IACzCC,SAAUxB,EAAKyB,MAAMC,IACrBC,SAAU3B,EAAKyB,MAAMG,IACrBC,WAAW,EACXN,GAAIvB,EAAKuB,KAxBrB,2DA2Be9B,EAAgB,KAAMqC,UA3BrC,0DAFuC,yDAkC9BC,EAAkBzC,YAC3B,yBAD2C,uCAE3C,WAAgBoB,EAAhB,sBAAAlB,EAAA,6DAAmCC,EAAnC,EAAmCA,gBAAnC,kBAE+BC,MAAM,GAAD,OAAIpB,EAAJ,qBAAwBoC,EAAxB,+BAAuDtC,IAF3F,WAEcuB,EAFd,QAGsBC,IAA0B,MAApBD,EAASE,OAHrC,sBAIkB,IAAIC,MAAM,kCAJ5B,uBAM2BH,EAASI,OANpC,cAMcC,EANd,yBAQe,CACHC,YAAaD,EAAKE,KAAKC,KACvBC,eAAgBJ,EAAKE,KAAKG,SAC1BC,eAAgBN,EAAKE,KAAKK,SAC1BC,KAAMjC,EAAeyB,EAAKS,IAC1BC,SAAUV,EAAKW,KACfC,UAAWZ,EAAKa,KAAKC,MACrBC,SAAUf,EAAKE,KAAKa,SAASC,QAAQ,GACrCC,SAAUjB,EAAKE,KAAKe,SAASD,QAAQ,GACrCE,mBAAqBlB,EAAKmB,QAAS,GAAIC,YAAaC,cACpDC,YAAaxC,EAAUkB,EAAKmB,QAAS,GAAII,IACzCC,SAAUxB,EAAKyB,MAAMC,IACrBC,SAAU3B,EAAKyB,MAAMG,IACrBC,WAAW,EACXN,GAAIvB,EAAKuB,KAtBrB,2DAyBe9B,EAAgB,KAAMqC,UAzBrC,0DAF2C,yDAgClCE,EAAkB1C,YAC3B,iCAD2C,uCAE3C,WAAgB2C,EAAhB,wBAAAzC,EAAA,6DAA4DC,EAA5D,EAA4DA,gBAA5D,kBAE+BC,MAAM,GAAD,OAAIpB,EAAJ,uBAA0B2D,EAAYP,IAAtC,gBAAiDO,EAAYL,IAA7D,qEAA6HxD,IAFjK,WAEcuB,EAFd,QAGsBC,GAHtB,sBAIkB,IAAIE,MAAM,kCAJ5B,uBAM8BH,EAASI,OANvC,cAMcmC,EANd,iBAO2BA,EAAQC,OAAOC,MAAM,EAAG,IAAIC,QAAO,SAACC,EAAUC,GAC7D,OAAIA,EAAQ,IAAM,EACPD,EAEJ,QAXnB,eAOctC,EAPd,yBAaeA,GAbf,2DAeeP,EAAgB,KAAMqC,UAfrC,0DAF2C,yDAsBzCU,EAAeC,YAAY,CAC7B9B,KAAM,UACN+B,aAnGyC,CACzCC,OAAQ,GACRC,gBAAiB,GACjB/C,OAAQ,KACRgD,MAAO,KACPC,cAAe,KACfC,eAAgB,IA8FhBC,SAAU,CACNC,SADM,SACGC,EAAOC,GACZD,EAAML,MAAQM,EAAOC,SAEzBC,WAJM,SAIKH,GACPA,EAAML,MAAQ,MAElBS,mBAPM,SAOaJ,EAAOC,GACtBD,EAAMN,gBAAkBO,EAAOC,SAEnCG,iBAVM,SAUWL,EAAOC,GACpBD,EAAMJ,cAAgBK,EAAOC,SAEjCI,aAbM,SAaON,EAAOC,GAChBD,EAAMP,OAASO,EAAMP,OAAOc,KAAI,SAACnB,GAC7B,OAAIA,EAAKf,KAAO4B,EAAOC,SACnBd,EAAKT,WAAY,EACjBS,EAAKrC,YAAgC,EAAjBqC,EAAKrC,YAAc,EAAG,GAC1CqC,EAAKlC,eAAsC,EAApBkC,EAAKlC,eAAiB,EAAG,GAChDkC,EAAKhC,eAAsC,EAApBgC,EAAKhC,eAAiB,EAAG,GACzCgC,GAEJA,MAGfoB,UAzBM,SAyBIR,EAAOC,GACbD,EAAMP,OAASO,EAAMP,OAAOc,KAAI,SAACnB,GAC7B,OAAIA,EAAKf,KAAO4B,EAAOC,SACnBd,EAAKT,WAAY,EACjBS,EAAKrC,YAAoC,GAArBqC,EAAKrC,YAAY,IAAM,EAC3CqC,EAAKlC,eAA0C,GAAxBkC,EAAKlC,eAAe,IAAM,EACjDkC,EAAKhC,eAA0C,GAAxBgC,EAAKhC,eAAe,IAAM,EAC1CgC,GAEJA,MAGfqB,WArCM,SAqCKT,EAAOC,GACdD,EAAMP,OAASO,EAAMP,OAAON,QACxB,SAAAC,GAAI,OAAIA,EAAKf,KAAO4B,EAAOC,aAGvCQ,cAAe,SAACC,GACZA,EAAQC,QAAQzE,EAAY0E,SAAS,SAACb,GAClCA,EAAMrD,OAAS,UACfqD,EAAML,MAAQ,QAEbiB,QAAQzE,EAAY2E,WAAW,SAACd,EAAOC,GACpCD,EAAMrD,OAAS,WACfqD,EAAMP,OAAOsB,KAAKd,EAAOC,YAE5BU,QAAQzE,EAAY6E,UAAU,SAAChB,EAAOC,GACnCD,EAAMrD,OAAS,WACfqD,EAAML,MAAQM,EAAOC,WAExBU,QAAQ/B,EAAgBgC,SAAS,SAACb,GAC/BA,EAAML,MAAQ,QAEjBiB,QAAQ/B,EAAgBiC,WAAW,SAACd,EAAOC,GACxCD,EAAMP,OAASO,EAAMP,OAAOc,KAAI,SAACnB,GAC7B,OAAIA,EAAKf,KAAO4B,EAAOC,QAAQ7B,GAC3Be,EAAOa,EAAOC,QAGXd,QAGdwB,QAAQ/B,EAAgBmC,UAAU,SAAChB,EAAOC,GACvCD,EAAMrD,OAAS,WACfqD,EAAML,MAAQM,EAAOC,WAExBU,QAAQ9B,EAAgB+B,SAAS,SAACb,GAC/BA,EAAMrD,OAAS,UACfqD,EAAML,MAAQ,QAEjBiB,QAAQ9B,EAAgBgC,WAAW,SAACd,EAAOC,GACxCD,EAAMrD,OAAS,WACfqD,EAAMH,eAAiBI,EAAOC,WAEjCU,QAAQ9B,EAAgBkC,UAAU,SAAChB,EAAOC,GACvCD,EAAMrD,OAAS,WACfqD,EAAML,MAAQM,EAAOC,cAK9B,EAQHZ,EAAa2B,QAPblB,EADG,EACHA,SACAI,EAFG,EAEHA,WACAC,EAHG,EAGHA,mBACAC,EAJG,EAIHA,iBACAC,EALG,EAKHA,aACAE,EANG,EAMHA,UACAC,EAPG,EAOHA,WAGSS,EAAiB5B,EAAa6B,QEzM9BC,EAAiB,uCAAG,gCAAA9E,EAAA,6DACzB+E,EAAe,GADU,kBAIF7E,MAAM,gCAAD,OLLJrB,mBKCC,cAInBsB,EAJmB,gBAKNA,EAASI,OALH,UAKnBC,EALmB,OAMzBuE,EAAevE,EAAKwE,KACf7E,EAASC,GAPW,uBAQf,IAAIE,MAAM,2BARK,0DAWzB2E,QAAQC,IAAR,MAXyB,iCActBH,GAdsB,0DAAH,qD,OCAjBI,EAAsB,WAC/B,OACI,qBAAKC,UAAU,0BAAf,SACI,qBAAKA,UAAU,oC,iBCCdC,EAAkB,WAC3B,IAAMC,EAAW5G,GAAe,SAAAgF,GAAK,OAAIA,EAAM/B,QAAQ0B,SACjDkC,EAAW/G,IAEjB,OACI,sBAAK4G,UAAWI,IAAOC,aAAcC,KAAK,QAA1C,UACI,sBACIN,UAAWI,IAAOG,oBAClBC,QAAS,WACLL,EAAS1B,MAHjB,oBADJ,uBAOyByB,EAPzB,oD,iBCLKO,EAAoB,WAC7B,IAAMP,EAAW5G,GAAe,SAAAgF,GAAK,OAAIA,EAAM/B,QAAQ0B,SACjDkC,EAAW/G,IAEjB,OACI,sBAAK4G,UAAWI,IAAOM,eAAgBJ,KAAK,QAA5C,UACI,sBACIN,UAAWI,IAAOG,oBAClBC,QAAS,WACLL,EAAS1B,MAHjB,oBAMA,gDAAmByB,EAAnB,uD,iBCZCS,EAAoB,WAC7B,IAAMT,EAAW5G,GAAe,SAAAgF,GAAK,OAAIA,EAAM/B,QAAQ0B,SACjDkC,EAAW/G,IAEjB,OACI,sBAAK4G,UAAWI,IAAOQ,eAAgBN,KAAK,QAA5C,UACI,sBACIN,UAAWI,IAAOS,oBAClBL,QAAS,WACLL,EAAS1B,MAHjB,oBAMA,8BAAIyB,EAAJ,sD,OLhBRY,EAAY,CAAC,QAAS,WAE1B,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,GAAkBH,EAASY,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAASoB,EAAcC,EAAMC,GAC3B,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQd,EAAyBU,EAAMzB,GAE3C,OAAoB,gBAAoB,MAAOC,EAAS,CACtDpE,GAAI,UACJiG,MAAO,6BACPC,EAAG,MACHC,EAAG,MACHC,QAAS,cACTC,KAAM,UACNC,MAAO,CACLC,iBAAkB,mBAEpBC,SAAU,WACVC,IAAKZ,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3D9F,GAAI+F,GACHD,GAAS,KAAMjI,IAAOA,EAAkB,gBAAoB,IAAK,KAAmB,gBAAoB,OAAQ,CACjH6I,EAAG,0hBACY,gBAAoB,UAAW,CAC9CC,OAAQ,0MAIZ,IAAIC,EAA0B,aAAiBjB,GM3BlCkB,IN4BE,IM5B0B,SAACb,GAEtC,MAaIA,EAZAhG,UADJ,MACS,EADT,IAaIgG,EAXA7G,gBAFJ,MAEe,GAFf,IAaI6G,EAVA/G,YAHJ,MAGW,GAHX,IAaI+G,EATAtH,mBAJJ,MAIkB,EAJlB,IAaIsH,EARAjH,sBALJ,MAKqB,EALrB,IAaIiH,EAPAnH,sBANJ,MAMqB,EANrB,IAaImH,EANAxG,gBAPJ,MAOe,EAPf,IAaIwG,EALAtG,gBARJ,MAQe,EARf,IAaIsG,EAJAnG,mBATJ,MASkB,GATlB,IAaImG,EAHAjG,mBAVJ,MAUkB,GAVlB,IAaIiG,EAFA3G,iBAXJ,MAWgB,EAXhB,IAaI2G,EADA1F,iBAZJ,SAeMkD,EAAW/G,IA2BbqK,EAAkB,GAClBC,EAAkB,GAOtB,OANIzG,EACAwG,EAAkB,gBAElBC,EAAkB,gBAIlB,sBAAK1D,UAAU,OAAf,UACI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,sBAAMA,UAAU,aAAhB,SAA8BlE,IAC9B,sBAAMkE,UAAU,aAAhB,SAA8BpE,OAElC,sBAAKoE,UAAU,mBAAf,UACI,qBAAKA,UAAU,2BAAf,SACI,+BACK2D,KAAKC,MAAMvI,OAGpB,sBAAK2E,UAAU,2BAAf,UACI,sBAAKA,UAAU,2BAAf,UACI,sBACIA,UAAS,mCAA8ByD,GACvCjD,QAjDJ,SAACqD,GAChB5G,GACDkD,EAASrB,EAAUnC,IAEvBkH,EAAMC,kBA2Cc,mBAIA,qBAAK9D,UAAU,kCACf,sBACIA,UAAS,mCAA8B0D,GACvClD,QA/CD,SAACqD,GACpB5G,GACAkD,EAASvB,EAAajC,IAE1BkH,EAAMC,kBAyCc,sBAKJ,sBAAK9D,UAAU,6BAAf,UACI,sBAAKA,UAAU,0BAAf,UACI,sBAAMA,UAAU,mBAAhB,oBACA,mBAAGA,UAAU,mBAAb,SACI,+BACK2D,KAAKC,MAAMpI,OAGpB,sBAAMwE,UAAU,mBAAhB,SACK/C,EAAY,QAAO,aAG5B,sBAAK+C,UAAU,0BAAf,UACI,sBAAMA,UAAU,mBAAhB,oBACA,mBAAGA,UAAU,mBAAb,SACI,+BACK2D,KAAKC,MAAMlI,OAGpB,sBAAMsE,UAAU,mBAAhB,SACK/C,EAAY,QAAO,sBAMxC,sBAAK+C,UAAU,eAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,sBAAMA,UAAU,eAAhB,SACI,mBAAGA,UAAWtD,MAElB,qBAAKsD,UAAU,qBAAf,SACKxD,OAGT,sBAAKwD,UAAU,aAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,cAAf,UACQ,+BACKhE,IAET,sBAAMgE,UAAU,iBAAhB,oBAEJ,qBAAKA,UAAU,cAAf,2BAEJ,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,cAAf,UACQ,+BACK7D,IAET,sBAAM6D,UAAU,iBAAhB,kBAEJ,qBAAKA,UAAU,cAAf,yBAEJ,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,cAAf,UACQ,+BACK3D,IAET,sBAAM2D,UAAU,iBAAhB,oBAEJ,qBAAKA,UAAU,cAAf,kCAKhB,sBAAKA,UAAU,cAAf,UACI,wBACIA,UAAU,MACVQ,QAhHS,SAACqD,GACtB1D,EAAShD,EAAgBrB,IACzB+H,EAAMC,kBA4GE,oBAKA,qBACI9D,UAAU,eACVQ,QAhHO,SAACqD,GACpB1D,EAASpB,EAAWpC,IACpBkH,EAAMC,kBA4GE,SAII,cAAC,EAAD,CAAY9D,UAAU,0BC/J7B+D,GAAqB,WAE9B,IAAMhG,EAASzE,GAAe,SAAAgF,GAAK,OAAIA,EAAM/B,QAAQwB,UAE/CiG,EAAY,CAAC,QAKnB,OAJIjG,EAAOsD,QAAU,GACjB2C,EAAU3E,KAAK,oBAIf,qBAAKW,UAAWgE,EAAUC,KAAK,KAA/B,SAEQlG,EAAOc,KAAI,SAAAnB,GAAI,OACX,cAAC,IAAD,CACIwG,GAAE,kBAAaxG,EAAK5B,SAASqI,eADjC,SAII,cAAC,GAAD,eAAczG,KAFTA,EAAKf,UClBrByH,GAA4B,WAErC,IAAMC,EAAc/K,GAAe,SAAAgF,GAAK,OAAIA,EAAM/B,QAAQyB,mBAE1D,OACI,mCAEQqG,GACA,sBAAKrE,UAAU,kBAAf,UACI,qBAAIA,UAAU,0BAAd,kCACyB,4BAAIqE,GAAe,cAD5C,YAESA,EAAc,MAAQ,QAF/B,wCAIA,mBAAGrE,UAAU,uBAAb,yGCdPsE,GAA0B,WAEnC,OACI,sBAAKtE,UAAU,wBAAf,UACI,oBAAIA,UAAU,yBAAd,uEAEA,mBAAGA,UAAU,uBAAb,yGCDCuE,GAAmB,WAE5B,IAAMpE,EAAW/G,IACX8E,EAAgB5E,GAAe,SAAAgF,GAAK,OAAIA,EAAM/B,QAAQ2B,iBAEtDsG,EAAQ,uCAAG,4BAAA5J,EAAA,sEACa8E,IADb,OACP+E,EADO,OAEbtE,EAASzB,EAAmB+F,IAFf,2CAAH,qDAUd,OALAC,qBAAU,WACNF,MAED,IAGC,mCACKtG,EAAgB,cAAC,GAAD,IAAmB,cAAC,GAAD,O,SCnBnCyG,GAAiC,SAAChC,GAC3C,IACIiC,EAMAjC,EANAiC,SADJ,EAOIjC,EALAkC,qBAFJ,MAEoB,aAFpB,IAOIlC,EAJAmC,oBAHJ,MAGmB,aAHnB,IAOInC,EAHAoC,oBAJJ,MAImB,aAJnB,IAOIpC,EAFAqC,sBALJ,MAKqB,aALrB,EAMIC,EACAtC,EADAsC,UAGE/E,EAAW5G,GAAe,SAAAgF,GAAK,OAAIA,EAAM/B,QAAQ0B,SAOvD,OACI,qCACI,qBAAK+B,UAAU,MAAf,SACI,sBAAKA,UAAU,2BAAf,UACI,uBACIkF,UAAQ,EACRC,KAAK,SACLC,YAAY,cACZC,UAAWN,EACXO,QAASN,EACTO,SAfK,SAAC1B,GACtBgB,EAAchB,EAAM3C,OAAOsE,QAeXC,OAAQX,EACRU,MAAOP,IAEX,wBACIjF,UAAU,iBACVQ,QAASwE,EAFb,oBAMIJ,OAKK,gCAAb1E,GACG,cAAC,EAAD,QCzCNwF,GAAyB,WAGlC,IAAMC,EAAcC,kBAAO,GAC3B,EAAkCC,mBAAS,IAA3C,oBAAOZ,EAAP,KAAkBa,EAAlB,KACA,EAA4BD,mBAA8B,IAA1D,oBAAO9H,EAAP,KAAegI,EAAf,KACA,EAAsCF,mBAA8B,IAApE,oBAAOG,EAAP,KAAoBC,EAApB,KAIA,EAA8CJ,oBAAU,GAAxD,oBAAOK,EAAP,KAAwBC,EAAxB,KACMhG,EAAW/G,IACXgN,EAAkB9M,GAAe,SAAAgF,GAAK,OAAIA,EAAM/B,QAAQwB,UAE9D2G,qBAAU,WACN,IAAM2B,EAAS,uCAAG,kCAAAzL,EAAA,+EAEaE,MAAM,uEAAD,OAAwEwL,mBAAmBrB,GAA3F,iChBrBPxL,gDgBmBX,cAEJsB,EAFI,gBAGSA,EAASI,OAHlB,UAGJC,EAHI,OAIJmL,EAAwBnL,EAAK4K,aAE7BQ,EAAoBC,EAAWF,KAGjCR,EAAUS,GAETzL,EAASC,GAXJ,uBAYA,IAAIE,MAAM,kDAZV,0DAeViF,EAAS9B,EAAS,mDAClBsH,EAAYe,SAAU,EAhBZ,0DAAH,qDA2Bf,OALKf,EAAYe,UACbC,IACAC,EAAgB3B,GAChBoB,KAEG,WACHN,EAAU,OAIf,CAACd,IAGJ,IAAMwB,EAAa,SAACI,GAChB,OAAIA,EACOA,EACFpJ,QAAO,SAAAqJ,GAAU,MAAI,CAAC,WAAY,QAAQC,SAASD,EAAWE,eAGhEH,GAGLF,EAAuB,YACA,IAArBT,GACAC,GAAoB,IAItBS,EAAkB,SAAC3B,IAChBA,EAAU5D,QAAU2E,EAAY3E,QACjC4E,EAAe,KAIjBgB,EAAiB,SAACC,GACpB,IAAMC,EAAaD,EAAWE,QAAQC,OAChCvL,EAAWoL,EAAWE,QAAQxH,KAEpC,MAAM,GAAN,OAAU9D,EAAV,aAAuBqL,IAerBG,EAAmB,WACrBC,YAAW,WACPtB,EAAe,MAChB,MAqDP,OACI,mCACI,cAAC,GAAD,CACIpB,cAtEc,SAAC2C,GACvBvB,EAAelI,GACf+H,EAAa0B,IAqEL1C,aAAcwC,EACdvC,aAvDa,SAAClB,GACH,YAAdA,EAAMtC,KACH2E,GAAmB,GACvBC,EAAmBD,EAAkB,GAGzC,IAAMuB,EAAazB,EAAY3E,OAAS,EACrB,cAAdwC,EAAMtC,KACH2E,IAAoBuB,GACxBtB,EAAmBD,EAAkB,GAGtB,UAAdrC,EAAMtC,MACkB,IAArB2E,IACJJ,EAAamB,EAAejB,EAAYE,KACxCoB,MAyCItC,eArCe,SAACnB,GAEN,UAAdA,EAAMtC,KAAqD,mBAAlCsC,EAAM6D,cAAc1H,YAEzCiF,KAAe0C,SAAS1C,IAAc,GAAK0C,SAAS1C,IAAc,GAEhDmB,EAAgB3I,QAAO,SAAAC,GAAI,OAAIA,EAAK5B,WAAawK,mBAAmBrB,EAAU2C,MAAM,KAAK,OAC5FvG,QAMXyE,EAAa,IACb3F,EAAS9B,EAAS,mCANlB8B,EAAS1F,EAAYwK,IACrB0B,IACAb,EAAa,IACbwB,KAMJnH,EAAS9B,EAAS,kCAqBlB4G,UAAWA,EALf,SAQQe,EAAY3E,OACN,oBACErB,UAAU,sBACVQ,QA3EG,SAACqD,GACxB,IAAMgE,EAAahE,EAAM3C,OAA4B4G,UACrDhC,EAAa+B,GACb5B,EAAe,KAsEG,SAIGD,EAAYnH,KAxBf,SAACqI,EAA+BvJ,GAClD,OAAO,oBACHqC,UAAW,6BAAgCkG,IAAoBvI,EAAS,iCAAmC,IADxG,SAIFsJ,EAAeC,IAFXA,EAAWa,iBAuBF,UC7JbC,GAAiB,WAE1B,IAAM7H,EAAW/G,IACX6O,EAAW3O,GAAe,SAAAgF,GAAK,OAAIA,EAAM/B,QAAQtB,UACjDiF,EAAW5G,GAAe,SAAAgF,GAAK,OAAIA,EAAM/B,QAAQ0B,SACjDC,EAAgB5E,GAAe,SAAAgF,GAAK,OAAIA,EAAM/B,QAAQ2B,iBACtDH,EAASzE,GAAe,SAAAgF,GAAK,OAAIA,EAAM/B,QAAQwB,UAC/CsG,EAAc/K,GAAe,SAAAgF,GAAK,OAAIA,EAAM/B,QAAQyB,mBAgC1D,OA7BA0G,qBAAU,WACN,GAAK3G,EAAOsD,OAAS,IAAOgD,EAAa,CACrC,IAAM6D,EAAwBC,KAAKC,MAAMC,aAAaC,QAAQ,eAE9D,GAAIJ,GAAoC,IAAtBA,EAAW7G,OAAc,CACvC,IAAMkH,EAAc,uCAAG,gCAAA3N,EAAA,oEACFsN,GADE,+DACVxK,EADU,iBAETyC,EAAS1F,EAAYiD,IAFZ,qMAAH,qDAKpB6K,SAEA7I,IACK8I,MAAK,SAAA7I,GAAY,OACdQ,EADkBR,EACTlF,EAAYkF,GACZhB,EAAiB,kCAI3C,CAACZ,EAAOsD,OAAQgD,EAAalE,IAEhCuE,qBAAU,WACN,IAAM+D,EAAc1K,EAAOc,KAAI,SAAAnB,GAAI,OAAIA,EAAK5B,YAC5C2M,EAAYpH,OACNgH,aAAaK,QAAQ,aAAcP,KAAKQ,UAAUF,IAClDJ,aAAaO,UACpB,CAAC7K,IAIA,qCACI,cAAC,GAAD,IACA,cAAC,GAAD,IACc,YAAbkK,GAA0B,cAAC,EAAD,IAET,mCAAb/H,IACOhC,GACL,cAAC,EAAD,IAEO,wBAAbgC,GAAsC,cAAC,EAAD,IACzB,iCAAbA,GACE,cAAC,EAAD,IACH,cAAC,GAAD,QC3DL,IAAM2I,GAAoC,SAAClG,GAE9C,MAaIA,EAZA9G,UADJ,MACS,EADT,IAaI8G,EAXApH,YAFJ,MAEW,EAFX,IAaIoH,EAVAtG,gBAHJ,MAGe,EAHf,IAaIsG,EATAxG,gBAJJ,MAIe,EAJf,IAaIwG,EARAmG,kBALJ,MAKiB,EALjB,iBAaInG,EAPApG,QANJ,UAQYC,mBARZ,MAQ0B,GAR1B,MASYlC,YATZ,MASmB,GATnB,EAYIyO,EACApG,EADAoG,gBAGEC,ECvBH,SAAuBpP,GAC1B,IAAMC,EAAS,IAAIC,KAAiB,IAAZF,GACxB,MAAM,GAAN,OAAUC,EAAOoP,WAAjB,cAAiCpP,EAAOqP,aAAxC,KDqBaC,CAActN,GACrBD,EAAOjC,EAAekC,GACtBuN,EAAO,4CAAwC9O,EAAxC,WACP+O,EAAc1F,KAAK2F,KAAK/N,GA0B9B,OACI,sBAAKyE,UAAU,gBAAf,UACI,sBAAKA,UAAU,gCAAf,UACI,sBAAKA,UAAU,kCAAf,UACI,6BAAKgJ,IACL,4BAAIpN,OAER,qBAAKoE,UAAU,uBAAf,SACI,qBAAKA,UAAU,kBACViD,MAhCH,WAEd,IAAMsG,EAAa,wBAAoB,KAAO,IAAoB,GAAdF,GAAjC,cAAwD,KAAO,IAAoB,GAAdA,GAArE,gBAA8F,GAAKA,EAAc,IAAM,IAAvH,WAEbG,EAAc,wBAAoB,KAAO,IAAoB,GAAdH,GAAjC,cAAwD,KAAO,IAAoB,EAAdA,GAArE,kBAA+F,GAAKA,EAAc,IAAM,IAAxH,WAGdI,EAD8C,IAAlCJ,EAAcN,GACN,KAE1B,OAAIM,EAAc,EACP,CACHK,UAAWH,EACXE,OAAQA,GAGL,CACHC,UAAWF,EACXC,OAAQA,GAeQE,GADZ,SAGI,+BAESpO,EAAO,EAAR,WACQ8N,EADR,mBAEOA,EAFP,kBAOpB,sBAAKrJ,UAAU,gCAAf,UACI,sBAAKA,UAAU,oBAAf,UACQ,sBAAMA,UAAU,eAAhB,SACI,qBAAK4J,IAAKR,EAASS,IAAI,OAE/B,qBAAK7J,UAAU,yBAAf,SACKxD,OAGT,sBAAKwD,UAAU,4BAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,cAAf,UACY,+BACK8I,IAEb,sBAAM9I,UAAU,iBAAhB,oBAEJ,qBAAKA,UAAU,cAAf,2BAEJ,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,cAAf,UACY,+BACK7D,IAEb,sBAAM6D,UAAU,iBAAhB,kBAEJ,qBAAKA,UAAU,cAAf,yBAEJ,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,cAAf,UACY,+BACK3D,IAEb,sBAAM2D,UAAU,iBAAhB,oBAEJ,qBAAKA,UAAU,cAAf,mC,8CEzGjB,WAA+BlE,GAA/B,iBAAAlB,EAAA,sEAEoBE,MAAM,GAAD,OAAIpB,EAAJ,qBAAwBoC,EAAxB,kBAA0CtC,IAFnE,WAEGuB,EAFH,QAGWC,IAA0B,MAApBD,EAASE,OAH1B,sBAIO,IAAIC,MAAM,kCAJjB,uBAMgBH,EAASI,OANzB,cAMGC,EANH,iBAOUA,EAAKyB,MAPf,sF,sBCKA,IAAMiN,GAA2B,WAEpC,IAAM3J,EAAW/G,IACX+E,EAAiB7E,GAAe,SAAAgF,GAAK,OAAIA,EAAM/B,QAAQ4B,kBACtDpC,EAAQgO,cAARhO,KAEP2I,qBAAU,YDXP,SAAP,oCCYQsF,CAAgBjO,GAAMyM,MAAK,SAAApN,GAAI,OAAI+E,EAAS/C,EAAgB,CAACN,IAAK1B,EAAK0B,IAAKE,IAAK5B,EAAK4B,YACvF,CAACjB,EAAMoE,IAEV,IAAM4I,EAAkBpF,KAAK2F,KACzB3F,KAAKsG,IAAItI,MAAM,KACXxD,EAAeU,KAAI,SAAAnB,GAAI,OAAIA,EAAKnC,UAIxC,OACI,qCACI,qBAAKyE,UAAU,kBAAf,SACI,qBAAIA,UAAU,0BAAd,wCAC+B,4BAC3B,8BAAMjE,EAAKU,uBAInB,qBAAKuD,UAAU,gBAAf,SAEQ7B,EAAeU,KAAI,SAAAnB,GAAI,OACnB,cAAC,GAAD,aACIqL,gBAAiBA,GAEbrL,GADCA,EAAK7B,aCnCzBqO,GAAqB,WAC9B,OACI,2CCDKC,GAAmB,WAC5B,OAAO,qBAAKnK,UAAU,iBAAf,SACH,sBAAKA,UAAU,cAAf,UACI,cAAC,IAAD,CAAMkE,GAAG,IAAIlE,UAAU,aAAvB,qBACA,oBAAIrD,GAAG,aAAaqD,UAAU,6BAA9B,SACI,6BAAI,cAAC,IAAD,CAAMkE,GAAG,IAAT,4BCNPkG,GAAmB,WAC5B,OACI,wBAAQpK,UAAU,6BAAlB,SACI,qBAAKA,UAAU,kCAAf,SACI,sBAAKA,UAAU,YAAf,mBACO,IAAIlG,MAAOuQ,cADlB,kBAEI,mBACIrK,UAAU,iCACVsK,KAAK,wDACLpJ,OAAO,SACPqJ,IAAI,aAJR,0BCwBLC,OAlBf,WACI,OACI,mCACI,eAAC,IAAD,CAAQC,SAAS,iBAAjB,UACI,cAAC,GAAD,IACA,sBAAMzK,UAAU,oBAAhB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO0K,OAAK,EAACC,KAAK,IAAIC,UAAW5C,KACjC,cAAC,IAAD,CAAO2C,KAAK,gBAAgBC,UAAWd,KACvC,cAAC,IAAD,CAAOc,UAAWV,UAG1B,cAAC,GAAD,UCvBHW,GAAQC,YAAe,CAChCrL,QAAS,CACLlD,QAASiD,KCEjBuL,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRK,SAASC,eAAe,W","file":"static/js/main.1df4d24d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertMessage\":\"Alert_alertMessage__2-gkS\",\"warningMessage\":\"Alert_warningMessage__dXzq9\",\"closeWarningMessage\":\"Alert_closeWarningMessage__3unOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warningMessage\":\"Warning_warningMessage__2-7LD\",\"closeWarningMessage\":\"Warning_closeWarningMessage__AEQWO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"successMessage\":\"Success_successMessage__YcB08\",\"closeSuccessMessage\":\"Success_closeSuccessMessage__weM5j\"};","import {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux'\nimport type {RootState, AppDispatch} from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export const API_KEY = process.env.REACT_APP_API_KEY;\r\nexport const API_KEY_LOCATION = process.env.REACT_APP_LOCATION_API_KEY;\r\nexport const API_URL = `https://api.openweathermap.org/data/2.5/`;\r\nexport const API_KEY_AUTO_COMPLETE = process.env.REACT_APP_AUTO_COMPLETE_API_KEY;","export function getWeatherDate (timestamp: number) : string {\r\n\r\n    const tmDate = new Date(timestamp * 1000);\r\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\n    return `${days[tmDate.getDay()]}, ${months[tmDate.getMonth()]} ${tmDate.getDate()}`;\r\n}\r\n","import icons from './iconsList.json'\nimport {IIcons} from '../interfaces'\n\nexport function iconsMark(iconId: number): string {\n    const prefix = 'wi wi-';\n    const newIconID = String(iconId);\n    const newIcons: IIcons = icons;\n    let icon = newIcons[newIconID].icon;\n\n    if (!(iconId > 699 && iconId < 800) && !(iconId > 899 && iconId < 1000)) {\n        icon = 'day-' + icon;\n    }\n\n    return prefix + icon;\n}\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit'\r\nimport {API_KEY, API_URL} from '../config'\r\nimport {IInitWeatherSliceState} from '../interfaces'\r\nimport {getWeatherDate} from '../unils/getWeatherDate';\r\nimport {iconsMark} from '../unils/iconsMark';\r\n\r\n\r\nconst initialState: IInitWeatherSliceState = {\r\n    cities: [],\r\n    currentLocation: '',\r\n    status: null,\r\n    error: null,\r\n    locationError: null,\r\n    hourlyForecast: []\r\n};\r\n\r\nexport const fetchCities = createAsyncThunk(\r\n    'cities/fetchCurrentCities',\r\n    async function (searchingCity: string, {rejectWithValue}) {\r\n        try {\r\n            const response = await fetch(`${API_URL}weather?q=${searchingCity}&units=metric&appid=${API_KEY}`);\r\n            if (!response.ok && response.status !== 404) {\r\n                throw new Error('Server responded with an error');\r\n            } else if (response.status === 404) {\r\n                throw new Error('such city not found');\r\n            }\r\n            const data = await response.json();\r\n\r\n            return {\r\n                temperature: data.main.temp,\r\n                temperatureMax: data.main.temp_max,\r\n                temperatureMin: data.main.temp_min,\r\n                date: getWeatherDate(data.dt),\r\n                cityName: data.name,\r\n                windSpeed: data.wind.speed,\r\n                humidity: data.main.humidity.toFixed(0),\r\n                pressure: data.main.pressure.toFixed(0),\r\n                weatherDescription: (data.weather[ 0 ].description).toUpperCase(),\r\n                weatherIcon: iconsMark(data.weather[ 0 ].id),\r\n                coordLat: data.coord.lat,\r\n                coordLon: data.coord.lon,\r\n                isCelsius: true,\r\n                id: data.id\r\n            }\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\nexport const fetchCityUpdate = createAsyncThunk(\r\n    'cities/fetchCityUpdate',\r\n    async function (cityName: string, {rejectWithValue}) {\r\n        try {\r\n            const response = await fetch(`${API_URL}weather?q=${cityName}&units=metric&appid=${API_KEY}`);\r\n            if (!response.ok && response.status !== 404) {\r\n                throw new Error('Server responded with an error');\r\n            }\r\n            const data = await response.json();\r\n\r\n            return {\r\n                temperature: data.main.temp,\r\n                temperatureMax: data.main.temp_max,\r\n                temperatureMin: data.main.temp_min,\r\n                date: getWeatherDate(data.dt),\r\n                cityName: data.name,\r\n                windSpeed: data.wind.speed,\r\n                humidity: data.main.humidity.toFixed(0),\r\n                pressure: data.main.pressure.toFixed(0),\r\n                weatherDescription: (data.weather[ 0 ].description).toUpperCase(),\r\n                weatherIcon: iconsMark(data.weather[ 0 ].id),\r\n                coordLat: data.coord.lat,\r\n                coordLon: data.coord.lon,\r\n                isCelsius: true,\r\n                id: data.id\r\n            }\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\nexport const fetchSingleCity = createAsyncThunk(\r\n    'hourlyForecast/fetchSingleCity',\r\n    async function (cityGeoData: { lat: number, lon: number }, {rejectWithValue}) {\r\n        try {\r\n            const response = await fetch(`${API_URL}onecall?lat=${cityGeoData.lat}&lon=${cityGeoData.lon}&exclude=current,minutely,daily,alerts&units=metric&appid=${API_KEY}`);\r\n            if (!response.ok) {\r\n                throw new Error('Server responded with an error');\r\n            }\r\n            const allData = await response.json();\r\n            const data = await allData.hourly.slice(0, 24).filter((item: {}, index: number) => {\r\n                if (index % 3 === 0) {\r\n                    return item;\r\n                }\r\n                return null;\r\n            });\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\nconst weatherSlice = createSlice({\r\n    name: 'weather',\r\n    initialState,\r\n    reducers: {\r\n        setError(state, action) {\r\n            state.error = action.payload;\r\n        },\r\n        resetError(state) {\r\n            state.error = null;\r\n        },\r\n        getCurrentLocation(state, action) {\r\n            state.currentLocation = action.payload;\r\n        },\r\n        setLocationError(state, action) {\r\n            state.locationError = action.payload;\r\n        },\r\n        toFahrenheit(state, action) {\r\n            state.cities = state.cities.map((item) => {\r\n                if (item.id === action.payload) {\r\n                    item.isCelsius = false;\r\n                    item.temperature = (item.temperature*9/5)+32;\r\n                    item.temperatureMax = (item.temperatureMax*9/5)+32;\r\n                    item.temperatureMin = (item.temperatureMin*9/5)+32;\r\n                    return item;\r\n                }\r\n                return item;\r\n            });\r\n        },\r\n        toCelsius(state, action) {\r\n            state.cities = state.cities.map((item) => {\r\n                if (item.id === action.payload) {\r\n                    item.isCelsius = true;\r\n                    item.temperature = (item.temperature-32)*5/9;\r\n                    item.temperatureMax = (item.temperatureMax-32)*5/9;\r\n                    item.temperatureMin = (item.temperatureMin-32)*5/9;\r\n                    return item;\r\n                }\r\n                return item;\r\n            });\r\n        },\r\n        deleteCity(state, action) {\r\n            state.cities = state.cities.filter(\r\n                item => item.id !== action.payload);\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchCities.pending, (state) => {\r\n            state.status = 'loading';\r\n            state.error = null;\r\n        })\r\n            .addCase(fetchCities.fulfilled, (state, action) => {\r\n                state.status = 'resolved';\r\n                state.cities.push(action.payload);\r\n            })\r\n            .addCase(fetchCities.rejected, (state, action) => {\r\n                state.status = 'rejected';\r\n                state.error = action.payload as string;\r\n            })\r\n            .addCase(fetchCityUpdate.pending, (state) => {\r\n                state.error = null;\r\n            })\r\n            .addCase(fetchCityUpdate.fulfilled, (state, action) => {\r\n                state.cities = state.cities.map((item) => {\r\n                    if (item.id === action.payload.id) {\r\n                        item = action.payload;\r\n                        return item;\r\n                    }\r\n                    return item;\r\n                });\r\n            })\r\n            .addCase(fetchCityUpdate.rejected, (state, action) => {\r\n                state.status = 'rejected';\r\n                state.error = action.payload as string;\r\n            })\r\n            .addCase(fetchSingleCity.pending, (state) => {\r\n                state.status = 'loading';\r\n                state.error = null;\r\n            })\r\n            .addCase(fetchSingleCity.fulfilled, (state, action) => {\r\n                state.status = 'resolved';\r\n                state.hourlyForecast = action.payload;\r\n            })\r\n            .addCase(fetchSingleCity.rejected, (state, action) => {\r\n                state.status = 'rejected';\r\n                state.error = action.payload as string;\r\n            });\r\n    }\r\n});\r\n\r\nexport const {\r\n    setError,\r\n    resetError,\r\n    getCurrentLocation,\r\n    setLocationError,\r\n    toFahrenheit,\r\n    toCelsius,\r\n    deleteCity\r\n} = weatherSlice.actions;\r\n\r\nexport const weatherReducer = weatherSlice.reducer;\r\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconDelete(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 473 473\",\n    fill: \"#ff0000\",\n    style: {\n      enableBackground: \"new 0 0 473 473\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M317.667,214.42l5.667-86.42h20.951V38h-98.384V0H132.669v38H34.285v90h20.951l20,305h140.571 c23.578,24.635,56.766,40,93.478,40c71.368,0,129.43-58.062,129.43-129.43C438.715,275.019,385.143,218.755,317.667,214.42z  M162.669,30h53.232v8h-53.232V30z M64.285,68h250v30h-250V68z M103.334,403L85.301,128H293.27l-5.77,87.985 c-61.031,10.388-107.645,63.642-107.645,127.586c0,21.411,5.231,41.622,14.475,59.43H103.334z M309.285,443 c-54.826,0-99.43-44.604-99.43-99.43s44.604-99.429,99.43-99.429s99.43,44.604,99.43,99.429S364.111,443,309.285,443z\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"342.248,289.395 309.285,322.358 276.322,289.395 255.109,310.608 288.072,343.571 255.109,376.533  276.322,397.746 309.285,364.783 342.248,397.746 363.461,376.533 330.498,343.571 363.461,310.608  \"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconDelete);\nexport default __webpack_public_path__ + \"static/media/iconDelete.34aa26f4.svg\";\nexport { ForwardRef as ReactComponent };","import {API_KEY_LOCATION} from '../config'\r\n\r\nexport const fetchDataLocation = async () => {\r\n    let locationInfo = '';\r\n\r\n    try {\r\n        const response = await fetch(`https://ipinfo.io/json?token=${API_KEY_LOCATION}`);\r\n        const data = await response.json();\r\n        locationInfo = data.city;\r\n        if (!response.ok) {\r\n            throw new Error('Location is not defined')\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n    return locationInfo\r\n};","import React from 'react'\r\n\r\nexport const Preloader: React.FC = () => {\r\n    return (\r\n        <div className=\"progress green accent-1\">\r\n            <div className=\"indeterminate green darken-3\"/>\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\nimport styles from './Alert.module.css'\r\nimport {useAppDispatch, useAppSelector} from '../../app/hooks'\r\nimport {resetError} from '../../app/weatherSlice'\r\n\r\n\r\nexport const Alert: React.FC = () => {\r\n    const hasError = useAppSelector(state => state.weather.error);\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <div className={styles.alertMessage} role=\"alert\">\r\n            <span\r\n                className={styles.closeWarningMessage}\r\n                onClick={() => {\r\n                    dispatch(resetError())\r\n                }}\r\n            >&#10006;</span>\r\n            An error occurred : {hasError} ! We work on this. Try again latter, please.\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\nimport styles from './Warning.module.css'\r\nimport {useAppSelector, useAppDispatch} from '../../app/hooks'\r\nimport {resetError} from '../../app/weatherSlice'\r\n\r\n\r\nexport const Warning: React.FC = () => {\r\n    const hasError = useAppSelector(state => state.weather.error);\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <div className={styles.warningMessage} role=\"alert\">\r\n            <span\r\n                className={styles.closeWarningMessage}\r\n                onClick={() => {\r\n                    dispatch(resetError())\r\n                }}\r\n            >&#10006;</span>\r\n            <p>Unfortunately, {hasError}. Check entering data and try again, please !</p>\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\nimport styles from './Success.module.css'\r\nimport {useAppSelector, useAppDispatch} from '../../app/hooks'\r\nimport {resetError} from '../../app/weatherSlice'\r\n\r\n\r\nexport const Success: React.FC = () => {\r\n    const hasError = useAppSelector(state => state.weather.error);\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <div className={styles.successMessage} role=\"alert\">\r\n            <span\r\n                className={styles.closeSuccessMessage}\r\n                onClick={() => {\r\n                    dispatch(resetError())\r\n                }}\r\n            >&#10006;</span>\r\n            <p>{hasError} Check entering data and try again, please !</p>\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\nimport {ICity} from '../interfaces'\r\nimport {useAppDispatch} from '../app/hooks'\r\nimport {\r\n    toCelsius,\r\n    toFahrenheit,\r\n    fetchCityUpdate,\r\n    deleteCity\r\n} from '../app/weatherSlice'\r\nimport {ReactComponent as IconDelete} from '../media/iconDelete.svg'\r\n\r\n\r\nexport const CityItem: React.FC<ICity> = (props) => {\r\n\r\n    const {\r\n        id = 0,\r\n        cityName = '',\r\n        date = '',\r\n        temperature = 0,\r\n        temperatureMin = 0,\r\n        temperatureMax = 0,\r\n        humidity = 0,\r\n        pressure = 0,\r\n        description = '',\r\n        weatherIcon = '',\r\n        windSpeed = 0,\r\n        isCelsius = true\r\n    } = props;\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n\r\n    const updateToCelsius = (event: React.MouseEvent) => {\r\n        if (!isCelsius) {\r\n            dispatch(toCelsius(id));\r\n        }\r\n        event.preventDefault();\r\n    };\r\n\r\n    const updateToFahrenheit = (event: React.MouseEvent) => {\r\n        if (isCelsius) {\r\n            dispatch(toFahrenheit(id));\r\n        }\r\n        event.preventDefault();\r\n    };\r\n\r\n    const updateSingleCity = (event: React.MouseEvent) => {\r\n        dispatch(fetchCityUpdate(cityName));\r\n        event.preventDefault()\r\n    };\r\n\r\n    const deleteCityItem = (event: React.MouseEvent) => {\r\n        dispatch(deleteCity(id));\r\n        event.preventDefault()\r\n    };\r\n\r\n    let activeDegreeCel = '';\r\n    let activeDegreeFar = '';\r\n    if (isCelsius) {\r\n        activeDegreeCel = 'active-degree'\r\n    } else {\r\n        activeDegreeFar = 'active-degree'\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-content\">\r\n                <div className=\"card-geo-data\">\r\n                    <span className=\"card-title\">{cityName}</span>\r\n                    <span className=\"card-title\">{date}</span>\r\n                </div>\r\n                <div className=\"card-temperature\">\r\n                    <div className=\"card-temperature-degrees\">\r\n                        <span>\r\n                            {Math.round(temperature)}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"card-temperature-measure\">\r\n                        <div className=\"temperature-measure-kind\">\r\n                            <span\r\n                                className={`temperature-measure-cel  ${activeDegreeCel}`}\r\n                                onClick={updateToCelsius}\r\n                            >°C</span>\r\n                            <div className=\"temperature-measure-delimiter\"/>\r\n                            <span\r\n                                className={`temperature-measure-far  ${activeDegreeFar}`}\r\n                                onClick={updateToFahrenheit}\r\n                            >°F</span>\r\n                        </div>\r\n                        <div className=\"temperature-measure-minmax\">\r\n                            <div className=\"temperature-measure-max\">\r\n                                <span className=\"temperature-mark\">↑</span>\r\n                                <p className=\"temperature-text\">\r\n                                    <span>\r\n                                        {Math.round(temperatureMax)}\r\n                                    </span>\r\n                                </p>\r\n                                <span className=\"temperature-unit\">\r\n                                    {isCelsius ? '°C' : '°F'}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"temperature-measure-min\">\r\n                                <span className=\"temperature-mark\">↓</span>\r\n                                <p className=\"temperature-text\">\r\n                                    <span>\r\n                                        {Math.round(temperatureMin)}\r\n                                    </span>\r\n                                </p>\r\n                                <span className=\"temperature-unit\">\r\n                                    {isCelsius ? '°C' : '°F'}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-details\">\r\n                    <div className=\"card-details-wrap\">\r\n                        <span className=\"details-icon\">\r\n                            <i className={weatherIcon}/>\r\n                        </span>\r\n                        <div className=\"detail-description\">\r\n                            {description}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"detail-box\">\r\n                        <div className=\"detail-indicator\">\r\n                            <div className=\"detail-info\">\r\n                                    <span>\r\n                                        {windSpeed}\r\n                                    </span>\r\n                                <span className=\"detail-measure\">m/s</span>\r\n                            </div>\r\n                            <div className=\"detail-name\">wind speed</div>\r\n                        </div>\r\n                        <div className=\"detail-indicator\">\r\n                            <div className=\"detail-info\">\r\n                                    <span>\r\n                                        {humidity}\r\n                                    </span>\r\n                                <span className=\"detail-measure\">%</span>\r\n                            </div>\r\n                            <div className=\"detail-name\">humidity</div>\r\n                        </div>\r\n                        <div className=\"detail-indicator\">\r\n                            <div className=\"detail-info\">\r\n                                    <span>\r\n                                        {pressure}\r\n                                    </span>\r\n                                <span className=\"detail-measure\">hpa</span>\r\n                            </div>\r\n                            <div className=\"detail-name\">pressure</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-action\">\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={updateSingleCity}\r\n                >update\r\n                </button>\r\n                <div\r\n                    className=\"removal-tool\"\r\n                    onClick={deleteCityItem}\r\n                >\r\n                    <IconDelete className=\"city-delete\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useAppSelector} from '../app/hooks'\r\nimport {CityItem} from './CityItem'\r\n\r\n\r\nexport const CityList: React.FC = () => {\r\n\r\n    const cities = useAppSelector(state => state.weather.cities);\r\n\r\n    const listClass = ['list'];\r\n    if (cities.length <= 2) {\r\n        listClass.push('single-item-list')\r\n    }\r\n\r\n    return (\r\n        <div className={listClass.join(' ')}>\r\n            {\r\n                cities.map(item =>\r\n                    <Link\r\n                        to={`/cities/${item.cityName.toLowerCase()!}`}\r\n                        key={item.id}\r\n                    >\r\n                        <CityItem {...item} />\r\n                    </Link>)\r\n            }\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\nimport {useAppSelector} from '../app/hooks'\r\n\r\nexport const SuccessLocation: React.FC = () => {\r\n\r\n    const currentCity = useAppSelector(state => state.weather.currentLocation);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                currentCity &&\r\n                <div className=\"location-banner\">\r\n                    <h5 className=\"location-banner-heading\">\r\n                        Your current city is <b>{currentCity || 'undefined'}</b> and\r\n                        you {currentCity ? 'can' : 'can\\'t'} view current weather in it below.\r\n                    </h5>\r\n                    <p className=\"location-banner-text\">\r\n                        Also, to view the current weather in another city, enter its name in the field below.\r\n                    </p>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n};\r\n","import React from 'react'\r\n\r\nexport const ErrorLocation: React.FC = () => {\r\n\r\n    return (\r\n        <div className=\"error-location-banner\">\r\n            <h5 className=\"location-banner-banner\">\r\n                Unfortunately, we could not determine your current city. </h5>\r\n            <p className=\"location-banner-text\">\r\n                To view the current weather in your or another city, enter its name in the field below.\r\n            </p>\r\n        </div>\r\n    )\r\n};\r\n","import React, {useEffect} from 'react'\r\nimport {useAppDispatch, useAppSelector} from '../app/hooks'\r\nimport {fetchDataLocation} from '../unils/fetchDataLocation'\r\nimport {getCurrentLocation} from '../app/weatherSlice'\r\nimport {SuccessLocation} from './SuccessLocation'\r\nimport {ErrorLocation} from './ErrorLocation'\r\n\r\nexport const Banner: React.FC = () => {\r\n\r\n    const dispatch = useAppDispatch();\r\n    const locationError = useAppSelector(state => state.weather.locationError);\r\n\r\n    const location = async () => {\r\n        const getLocation = await fetchDataLocation();\r\n        dispatch(getCurrentLocation(getLocation))\r\n    };\r\n\r\n    useEffect(() => {\r\n        location();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {locationError ? <ErrorLocation/> : <SuccessLocation/>}\r\n        </>\r\n    )\r\n};\r\n","import React from 'react'\r\nimport {useAppSelector} from '../app/hooks'\r\nimport {Warning} from './Warning/Warning'\r\nimport {ISearchProps} from '../interfaces'\r\n\r\nexport const Search: React.FC<ISearchProps> = (props) => {\r\n    const {\r\n        children,\r\n        onChangeValue = () => {},\r\n        onClearField = () => {},\r\n        onKeyCatcher = () => {},\r\n        onSubmitButton = () => {},\r\n        textValue\r\n    } = props;\r\n\r\n    const hasError = useAppSelector(state => state.weather.error);\r\n\r\n    const onChangeInputVal = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        onChangeValue(event.target.value)\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className=\"input-field search-field\">\r\n                    <input\r\n                        required\r\n                        type=\"search\"\r\n                        placeholder=\"Search City\"\r\n                        onKeyDown={onKeyCatcher}\r\n                        onKeyUp={onSubmitButton}\r\n                        onChange={onChangeInputVal}\r\n                        onBlur={onClearField}\r\n                        value={textValue}\r\n                    />\r\n                    <button\r\n                        className=\"btn search-btn\"\r\n                        onClick={onSubmitButton}\r\n                    >Search\r\n                    </button>\r\n                    {\r\n                        children\r\n                    }\r\n                </div>\r\n            </div>\r\n            {\r\n                hasError === 'you enter unacceptable data'\r\n                && <Warning/>\r\n            }\r\n        </>\r\n    )\r\n};\r\n","import React, {useEffect, useRef, useState} from 'react'\r\nimport {API_KEY_AUTO_COMPLETE} from '../config'\r\nimport {useAppDispatch, useAppSelector} from '../app/hooks'\r\nimport {fetchCities, setError} from '../app/weatherSlice'\r\nimport {Search} from './Search'\r\nimport {IAutoCompleteCity, ICustomEvent} from '../interfaces'\r\n\r\nexport const AutoComplete: React.FC = () => {\r\n\r\n\r\n    const isCancelled = useRef(false); // true - block update load data from autocomplete api\r\n    const [textValue, setTextValue] = useState(''); // input data\r\n    const [cities, setCities] = useState<IAutoCompleteCity[]>([]); // saved full collection from autocomplete api\r\n    const [suggestions, setSuggestions] = useState<IAutoCompleteCity[]>([]); // saved only filtered data\r\n\r\n    // the index of the drop-down list item to select using the up and down keys.\r\n    // After pressing, the enter will return to position -1\r\n    const [focusSuggestion, setFocusSuggestion] = useState(-1);\r\n    const dispatch = useAppDispatch();\r\n    const citiesFromStore = useAppSelector(state => state.weather.cities);\r\n\r\n    useEffect(() => {\r\n        const loadUsers = async () => {\r\n            try {\r\n                const response = await fetch(`https://autocomplete.geocoder.ls.hereapi.com/6.2/suggest.json?query=${encodeURIComponent(textValue)}&maxresults=20&apikey=${API_KEY_AUTO_COMPLETE}`);\r\n                const data = await response.json();\r\n                const suggestionsCollection = data.suggestions;\r\n\r\n                const suggestionsFilter = cityFilter(suggestionsCollection);\r\n\r\n                if (suggestionsFilter) {\r\n                    setCities(suggestionsFilter);\r\n                }\r\n                if (!response.ok) {\r\n                    throw new Error('Sorry, something wrong with input autocomplete')\r\n                }\r\n            } catch (err) {\r\n                dispatch(setError('Sorry, something wrong with input autocomplete'));\r\n                isCancelled.current = true;\r\n            }\r\n        };\r\n\r\n        // If an error occurs while receiving data from the server,\r\n        // then we no longer make a request to the server\r\n        if (!isCancelled.current) {\r\n            clearFocusSuggestion();\r\n            clearSuggestion(textValue);\r\n            loadUsers();\r\n        }\r\n        return () => {\r\n            setCities([]);\r\n        }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [textValue]);\r\n\r\n\r\n    const cityFilter = (suggestionList: IAutoCompleteCity[]) => {\r\n        if (suggestionList) {\r\n            return suggestionList\r\n                .filter(suggestObj => ['district', 'city'].includes(suggestObj.matchLevel))\r\n        }\r\n\r\n        return suggestionList;\r\n    };\r\n\r\n    const clearFocusSuggestion = () => {\r\n        if (focusSuggestion !== -1) {\r\n            setFocusSuggestion(-1);\r\n        }\r\n    };\r\n\r\n    const clearSuggestion = (textValue: string) => {\r\n        if (!textValue.length && suggestions.length) {\r\n            setSuggestions([]);\r\n        }\r\n    };\r\n\r\n    const cityNameLayout = (suggestion: IAutoCompleteCity) => {\r\n        const countyName = suggestion.address.county;\r\n        const cityName = suggestion.address.city;\r\n\r\n        return `${cityName}, ${countyName}`;\r\n    };\r\n\r\n\r\n    const handleChangeValue = (searchStringVal: string) => {\r\n        setSuggestions(cities);\r\n        setTextValue(searchStringVal);\r\n    };\r\n\r\n    const handleSuggestClick = (event: React.MouseEvent<HTMLOListElement>) => {\r\n        const textClick = (event.target as HTMLInputElement).innerText;\r\n        setTextValue(textClick);\r\n        setSuggestions([]);\r\n    };\r\n\r\n    const handleClearField = () => {\r\n        setTimeout(() => {\r\n            setSuggestions([]);\r\n        }, 200)\r\n    };\r\n\r\n    const handleKeyCatcher = (event: React.KeyboardEvent) => {\r\n        if ((event.key === 'ArrowUp')\r\n            && (focusSuggestion > -1)) {\r\n            setFocusSuggestion(focusSuggestion - 1);\r\n        }\r\n\r\n        const maxSuggest = suggestions.length - 1;\r\n        if ((event.key === 'ArrowDown')\r\n            && (focusSuggestion !== maxSuggest)) {\r\n            setFocusSuggestion(focusSuggestion + 1);\r\n        }\r\n\r\n        if ((event.key === 'Enter')\r\n            && (focusSuggestion !== -1)) {\r\n            setTextValue(cityNameLayout(suggestions[focusSuggestion]));\r\n            handleClearField();\r\n        }\r\n    };\r\n\r\n    const handleSubmitButton = (event: React.KeyboardEvent | ICustomEvent) => {\r\n        // checking event source\r\n        if (event.key === 'Enter' || event.currentTarget.className === 'btn search-btn') {\r\n            // checking type of entering data\r\n            if (textValue && !(parseInt(textValue) >= 0 || parseInt(textValue) <= 0)) {\r\n                // checking is required city already in the store\r\n                const isInStore = citiesFromStore.filter(item => item.cityName === encodeURIComponent(textValue.split(',')[0]));\r\n                if (!isInStore.length) {\r\n                    dispatch(fetchCities(textValue));\r\n                    clearFocusSuggestion();\r\n                    setTextValue('');\r\n                    handleClearField();\r\n                } else {\r\n                    setTextValue('');\r\n                    dispatch(setError('You already have such a city'))\r\n                }\r\n            } else {\r\n                dispatch(setError('you enter unacceptable data'))\r\n            }\r\n        }\r\n    };\r\n\r\n    const mapSuggestion = (suggestion: IAutoCompleteCity, index: number) => {\r\n        return <li\r\n            className={'search-autocomplete-item ' + ((focusSuggestion === index) ? 'search-autocomplete-item-color' : '')}\r\n            key={suggestion.locationId}\r\n        >\r\n            {cityNameLayout(suggestion)}\r\n        </li>\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Search\r\n                onChangeValue={handleChangeValue}\r\n                onClearField={handleClearField}\r\n                onKeyCatcher={handleKeyCatcher}\r\n                onSubmitButton={handleSubmitButton}\r\n                textValue={textValue}\r\n            >\r\n                {\r\n                    suggestions.length\r\n                        ? <ul\r\n                            className=\"search-autocomplete\"\r\n                            onClick={handleSuggestClick}\r\n                        >\r\n                            {suggestions.map(mapSuggestion)}\r\n                        </ul>\r\n                        : null\r\n                }\r\n            </Search>\r\n        </>\r\n    );\r\n};","import React, {useEffect} from 'react'\r\nimport {useAppDispatch, useAppSelector} from '../app/hooks'\r\nimport {fetchCities, setLocationError} from '../app/weatherSlice'\r\nimport {fetchDataLocation} from '../unils/fetchDataLocation'\r\nimport {Preloader} from '../components/Preloader'\r\nimport {Alert} from '../components/Alert/Alert'\r\nimport {Warning} from '../components/Warning/Warning'\r\nimport {Success} from '../components/Success/Success'\r\nimport {CityList} from '../components/CityList'\r\nimport {Banner} from '../components/Banner'\r\nimport {AutoComplete} from '../components/AutoComplete'\r\n\r\n\r\nexport const Home: React.FC = () => {\r\n\r\n    const dispatch = useAppDispatch();\r\n    const statusIs = useAppSelector(state => state.weather.status);\r\n    const hasError = useAppSelector(state => state.weather.error);\r\n    const locationError = useAppSelector(state => state.weather.locationError);\r\n    const cities = useAppSelector(state => state.weather.cities);\r\n    const currentCity = useAppSelector(state => state.weather.currentLocation);\r\n\r\n\r\n    useEffect(() => {\r\n        if ((cities.length < 1) && !currentCity) {\r\n            const localStore: string [] = JSON.parse(localStorage.getItem('citiesList')!);\r\n\r\n            if (localStore && localStore.length !== 0) {\r\n                const getSavedCities = async () => {\r\n                    for (let item of localStore) {\r\n                        await dispatch(fetchCities(item))\r\n                    }\r\n                };\r\n                getSavedCities()\r\n            } else {\r\n                fetchDataLocation()\r\n                    .then(locationInfo => locationInfo ?\r\n                        dispatch(fetchCities(locationInfo)) :\r\n                        dispatch(setLocationError('Location is not defined'))\r\n                    );\r\n            }\r\n        }\r\n    }, [cities.length, currentCity, dispatch]);\r\n\r\n    useEffect(() => {\r\n        const citiesNames = cities.map(item => item.cityName);\r\n        citiesNames.length\r\n            ? localStorage.setItem('citiesList', JSON.stringify(citiesNames))\r\n            : localStorage.clear();\r\n    }, [cities]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Banner/>\r\n            <AutoComplete/>\r\n            {statusIs === 'loading' && <Preloader/>}\r\n            {\r\n                (hasError === 'Server responded with an error'\r\n                    && !locationError)\r\n                && <Alert/>\r\n            }\r\n            {hasError === 'such city not found' && <Warning/>}\r\n            {hasError === 'You already have such a city'\r\n            && <Success/>}\r\n            <CityList/>\r\n        </>\r\n    )\r\n};\r\n","import React from 'react'\r\nimport {getHourlyTime} from '../unils/getHourlyTime'\r\nimport {IOneDay} from '../interfaces'\r\nimport {getWeatherDate} from '../unils/getWeatherDate'\r\n\r\n\r\nexport const SingleCityItem: React.FC<IOneDay> = (props) => {\r\n\r\n    const {\r\n        dt = 0,\r\n        temp = 0,\r\n        pressure = 0,\r\n        humidity = 0,\r\n        wind_speed = 0,\r\n        weather: [\r\n            {\r\n                description = '',\r\n                icon = ''\r\n            }\r\n        ],\r\n        elemWithMinTemp\r\n    } = props;\r\n\r\n    const time = getHourlyTime(dt);\r\n    const date = getWeatherDate(dt);\r\n    const iconSrc = `https://openweathermap.org/img/wn/${icon}@2x.png`;\r\n    const integerTemp = Math.ceil(temp);\r\n\r\n\r\n    const setStyles = (): {} => {\r\n\r\n        const boxShadowPlus = `0 0 40px rgba(${250 - (100 - integerTemp * 10)},  ${220 - (100 - integerTemp * 12)}, 0, ${1 - (integerTemp / 100 + .4)}) inset`;\r\n\r\n        const boxShadowMinus = `0 0 40px rgba(${250 - (100 - integerTemp * 12)},  ${255 - (100 - integerTemp * 8)}, 250, ${1 - (integerTemp / 100 + .3)}) inset`;\r\n\r\n        const diffTemp = (integerTemp - elemWithMinTemp!) * 12;\r\n        const bottom = diffTemp + 'px';\r\n\r\n        if (integerTemp > 0) {\r\n            return {\r\n                boxShadow: boxShadowPlus,\r\n                bottom: bottom,\r\n            }\r\n        } else {\r\n            return {\r\n                boxShadow: boxShadowMinus,\r\n                bottom: bottom,\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"card day-card\">\r\n            <div className=\"card-content card-content-day\">\r\n                <div className=\"card-geo-data card-geo-data-day\">\r\n                    <h5>{time}</h5>\r\n                    <p>{date}</p>\r\n                </div>\r\n                <div className=\"card-temperature-day\">\r\n                    <div className=\"temperature-day\"\r\n                         style={setStyles()}\r\n                    >\r\n                        <span>\r\n                            {\r\n                                (temp > 0) ?\r\n                                    `+${integerTemp}°C` :\r\n                                    `${integerTemp}°C`}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-details card-details-day\">\r\n                <div className=\"card-details-wrap\">\r\n                        <span className=\"details-icon\">\r\n                            <img src={iconSrc} alt=\"\"/>\r\n                        </span>\r\n                    <div className=\"detail-description-day\">\r\n                        {description}\r\n                    </div>\r\n                </div>\r\n                <div className=\"detail-box detail-box-day\">\r\n                    <div className=\"detail-indicator\">\r\n                        <div className=\"detail-info\">\r\n                                    <span>\r\n                                        {wind_speed}\r\n                                    </span>\r\n                            <span className=\"detail-measure\">m/s</span>\r\n                        </div>\r\n                        <div className=\"detail-name\">wind speed</div>\r\n                    </div>\r\n                    <div className=\"detail-indicator\">\r\n                        <div className=\"detail-info\">\r\n                                    <span>\r\n                                        {humidity}\r\n                                    </span>\r\n                            <span className=\"detail-measure\">%</span>\r\n                        </div>\r\n                        <div className=\"detail-name\">humidity</div>\r\n                    </div>\r\n                    <div className=\"detail-indicator\">\r\n                        <div className=\"detail-info\">\r\n                                    <span>\r\n                                        {pressure}\r\n                                    </span>\r\n                            <span className=\"detail-measure\">hpa</span>\r\n                        </div>\r\n                        <div className=\"detail-name\">pressure</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","export function getHourlyTime(timestamp: number): string {\r\n    const tmDate = new Date(timestamp * 1000);\r\n    return `${tmDate.getHours()} : ${tmDate.getMinutes()}0`\r\n}","import {API_KEY, API_URL} from '../config'\r\n\r\nexport async function fetchChosenCity(cityName: string) {\r\n\r\n    const response = await fetch(`${API_URL}weather?q=${cityName}&appid=${API_KEY}`);\r\n    if (!response.ok && response.status !== 404) {\r\n        throw new Error('Server responded with an error')\r\n    }\r\n    const data = await response.json();\r\n    return await data.coord\r\n}","import React, {useEffect} from 'react'\r\nimport {useAppDispatch, useAppSelector} from '../app/hooks'\r\nimport {useParams} from 'react-router-dom'\r\nimport {fetchSingleCity} from '../app/weatherSlice'\r\nimport {SingleCityItem} from '../components/SingleCityItem'\r\nimport {fetchChosenCity} from '../unils/fetchChosenCity'\r\n\r\nexport const SingleCityList: React.FC = () => {\r\n\r\n    const dispatch = useAppDispatch();\r\n    const hourlyForecast = useAppSelector(state => state.weather.hourlyForecast);\r\n    const {name} = useParams<{ name: string }>();\r\n\r\n    useEffect(() => {\r\n        fetchChosenCity(name).then(data => dispatch(fetchSingleCity({lat: data.lat, lon: data.lon})))\r\n    }, [name, dispatch]);\r\n\r\n    const elemWithMinTemp = Math.ceil(\r\n        Math.min.apply(null,\r\n            hourlyForecast.map(item => item.temp)\r\n        )\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <div className=\"location-banner\">\r\n                <h5 className=\"location-banner-heading\">\r\n                    Daily weather forecast for <b>\r\n                    <pre>{name.toUpperCase()}</pre>\r\n                </b>\r\n                </h5>\r\n            </div>\r\n            <div className='list day-list'>\r\n                {\r\n                    hourlyForecast.map(item =>\r\n                        <SingleCityItem\r\n                            elemWithMinTemp={elemWithMinTemp}\r\n                            key={item.dt}\r\n                            {...item}\r\n                        />)\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n};","import React from 'react'\r\n\r\nexport const NotFound: React.FC = () => {\r\n    return (\r\n        <h1>Page 404</h1>\r\n    )\r\n};","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const Header: React.FC = () => {\r\n    return <nav className=\"green darken-2\">\r\n        <div className=\"nav-wrapper\">\r\n            <Link to=\"/\" className=\"brand-logo\">Weather</Link>\r\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                <li><Link to=\"/\">Home</Link></li>\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n};","import React from 'react'\r\n\r\nexport const Footer: React.FC = () => {\r\n    return (\r\n        <footer className=\"page-footer green darken-2\">\r\n            <div className=\"footer-copyright green darken-2\">\r\n                <div className=\"container\">\r\n                    © {new Date().getFullYear()} Copyright Text\r\n                    <a\r\n                        className=\"grey-text text-lighten-4 right\"\r\n                        href=\"https://github.com/Andrey-Golubenko/react-weather.git\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >Repo</a>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n};","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch\n} from 'react-router-dom'\n\nimport {Home} from './pages/Home'\nimport {SingleCityList} from './pages/SingleCityList'\nimport {NotFound} from './pages/NotFound'\nimport {Header} from './components/Header'\nimport {Footer} from './components/Footer'\n\n\nfunction App() {\n    return (\n        <>\n            <Router basename='/react-weather'>\n                <Header/>\n                <main className=\"container content\">\n                    <Switch>\n                        <Route exact path=\"/\" component={Home}/>\n                        <Route path=\"/cities/:name\" component={SingleCityList}/>\n                        <Route component={NotFound}/>\n                    </Switch>\n                </main>\n                <Footer/>\n            </Router>\n        </>\n    );\n}\n\nexport default App;\n","import {configureStore, ThunkAction, Action} from '@reduxjs/toolkit';\nimport {weatherReducer} from './weatherSlice'\n\nexport const store = configureStore({\n    reducer: {\n        weather: weatherReducer\n    },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType,\n    RootState,\n    unknown,\n    Action<string>\n    >;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport {store} from './app/store'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}